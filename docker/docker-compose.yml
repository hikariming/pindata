version: '3.8'

services:
  # PostgreSQL 数据库
  db:
    image: postgres:15-alpine
    container_name: llama_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: llama_dataset
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - llama_network

  # MinIO 对象存储
  minio:
    image: minio/minio:latest
    container_name: llama_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"     # API 端口
      - "9001:9001"     # 控制台端口
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    networks:
      - llama_network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: llama_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - llama_network

  # PinData API 服务
  pindata-api:
    image: hikariming/pindata-api:v0.01
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: pindata_api
    ports:
      - "8897:8897"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/llama_dataset
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    volumes:
      - ../backend:/app
      - api_data:/app/data
    depends_on:
      - db
      - redis
      - minio
    restart: unless-stopped
    networks:
      - llama_network
    command: ["python", "run.py"]

  # PinData Celery Worker 服务
  pindata-celery:
    image: hikariming/pindata-api:v0.01
    build:
      context: ../backend
      dockerfile: Dockerfile  
    container_name: pindata_celery
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/llama_dataset
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
    volumes:
      - ../backend:/app
      - celery_data:/app/data
    depends_on:
      - db
      - redis
      - minio
    restart: unless-stopped
    networks:
      - llama_network
    command: ["./start_celery_threads.sh"]

  # PinData Frontend 服务
  pindata-frontend:
    image: hikariming/pindata-frontend:v0.01
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: pindata_frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - pindata-api
    restart: unless-stopped
    networks:
      - llama_network

# 数据卷
volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
  api_data:
    driver: local
  celery_data:
    driver: local

# 网络
networks:
  llama_network:
    driver: bridge